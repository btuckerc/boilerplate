# -----------------------------------------------------------------------------
# Options
# -----------------------------------------------------------------------------
# set -g default-terminal "${TERM}" # Set default terminal
set -sg terminal-overrides ",*:RGB"  # True color support
set -g escape-time 0                 # Reduce delay on escape sequences
set -g mouse on                      # Enable mouse support
set -g renumber-windows on           # Keep window numbers sequential
set -g base-index 1                  # Start windows from 1
setw -g pane-base-index 1            # Start panes from 1
setw -g mode-keys vi                 # Vim-like copy mode
set -g allow-passthrough on          # For iTerm2 shell integration
set -ga update-environment TERM      # Pass through TERM
set -ga update-environment TERM_PROGRAM # Pass through TERM_PROGRAM
set-option -g status-position bottom # Status bar at the bottom
set -g repeat-time 1000              # Time (ms) for repeatable commands

# -----------------------------------------------------------------------------
# Keybindings
# -----------------------------------------------------------------------------
# Prefix
unbind C-b
set -g prefix `
bind ` send-prefix

# Reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."

# Kill panes/windows
bind x kill-pane            # Kill current pane
bind-key -n C-x kill-pane   # Kill current pane with Ctrl-x (no prefix)

# Window management
bind c new-window -c "#{pane_current_path}"        # New window with current path
bind '"' split-window -v -c "#{pane_current_path}" # Split horizontally with current path
bind % split-window -h -c "#{pane_current_path}"   # Split vertically with current path

# Auto-create/select windows with Prefix + number
bind -r 1 run "tmux select-window -t 1 || tmux new-window -t 1" # -n 'win1'"
bind -r 2 run "tmux select-window -t 2 || tmux new-window -t 2"
bind -r 3 run "tmux select-window -t 3 || tmux new-window -t 3"
bind -r 4 run "tmux select-window -t 4 || tmux new-window -t 4"
bind -r 5 run "tmux select-window -t 5 || tmux new-window -t 5"
bind -r 6 run "tmux select-window -t 6 || tmux new-window -t 6"
bind -r 7 run "tmux select-window -t 7 || tmux new-window -t 7"
bind -r 8 run "tmux select-window -t 8 || tmux new-window -t 8"
bind -r 9 run "tmux select-window -t 9 || tmux new-window -t 9"

# Auto-create windows 1, 2, 3 with Alt + number
bind-key -n M-1 run "tmux select-window -t 1 || tmux new-window -t 1"
bind-key -n M-2 run "tmux select-window -t 2 || tmux new-window -t 2"
bind-key -n M-3 run "tmux select-window -t 3 || tmux new-window -t 3"
bind-key -n M-4 run "tmux select-window -t 4 || tmux new-window -t 4"
bind-key -n M-5 run "tmux select-window -t 5 || tmux new-window -t 5"
bind-key -n M-6 run "tmux select-window -t 6 || tmux new-window -t 6"
bind-key -n M-7 run "tmux select-window -t 7 || tmux new-window -t 7"
bind-key -n M-8 run "tmux select-window -t 8 || tmux new-window -t 8"
bind-key -n M-9 run "tmux select-window -t 9 || tmux new-window -t 9"

# Pane navigation (Vim-like hjkl, conditional for Vim, repeatable)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -r -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -r -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -r -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -r -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -r -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -r -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Pane navigation in copy mode (repeatable)
bind-key -r -T copy-mode-vi 'C-h' select-pane -L
bind-key -r -T copy-mode-vi 'C-j' select-pane -D
bind-key -r -T copy-mode-vi 'C-k' select-pane -U
bind-key -r -T copy-mode-vi 'C-l' select-pane -R
bind-key -r -T copy-mode-vi 'C-\' select-pane -l

# Pane resizing (Alt + hjkl, repeatable, step of 2 cells)
bind -r -n M-h resize-pane -L 2
bind -r -n M-j resize-pane -D 2
bind -r -n M-k resize-pane -U 2
bind -r -n M-l resize-pane -R 2

# Session switching (Alt + [/], repeatable)
bind -r -n M-[ switch-client -p
bind -r -n M-] switch-client -n

# Zooming
bind z resize-pane -Z

# Copy mode bindings (Vim-like)
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# -----------------------------------------------------------------------------
# Theme
# -----------------------------------------------------------------------------
# Status line style
set-option -g status-style fg=white,bg=default

# Pane border styles
set -g pane-border-lines simple
set -g pane-border-style fg=black,bright
set -g pane-active-border-style fg=magenta

# Window status styles
setw -g window-status-style fg=white,bg=default
setw -g window-status-current-style fg=white,bg=default

# Status bar content
set -g status-left ""
set -g status-right "#h | #(date +'%H:%M')"

# -----------------------------------------------------------------------------
# Plugins (TPM - Tmux Plugin Manager)
# -----------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'xamut/tmux-spotify'

# Initialize TPM (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
