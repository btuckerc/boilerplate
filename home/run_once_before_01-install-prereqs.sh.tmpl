{{- if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env bash
# Managed by chezmoi - https://github.com/btuckerc/boilerplate
# Install Homebrew and essential tools (macOS)

set -euo pipefail

# Install Homebrew if not present
if ! command -v brew >/dev/null 2>&1; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    # Set up Homebrew in PATH for Apple Silicon
    if [[ $(uname -m) == "arm64" ]]; then
        echo "Setting up Homebrew for Apple Silicon..."
        eval "$(/opt/homebrew/bin/brew shellenv)"
    else
        echo "Setting up Homebrew for Intel Mac..."
        eval "$(/usr/local/bin/brew shellenv)"
    fi

    echo "Homebrew installed successfully"
else
    echo "Homebrew already installed"
fi

# Install minimal tools via Homebrew (not available in mise registry)
echo "Installing essential tools via Homebrew..."
brew install git eza btop mise

# Install Ruby build dependencies
echo "Installing Ruby build dependencies..."
brew install openssl@3 readline libyaml gmp autoconf rust

echo "Essential tools installed successfully"
echo ""

if command -v mise >/dev/null 2>&1; then
    TOOLS_COUNT=$(mise config ls 2>/dev/null | grep -o "config.toml.*" | sed 's/config.toml  //' | tr ',' '\n' | wc -l | tr -d ' ')
    TOOL_LIST=$(mise config ls 2>/dev/null | grep -o "config.toml.*" | sed 's/config.toml  //' | tr ',' '\n' | sed 's/aqua://g; s/ubi://g; s/npm://g; s/pipx://g; s/gem://g; s/asdf:mise-plugins\///g; s/go:.*\///' | head -10 | tr '\n' ' ')
    echo "Running 'mise install' will install $TOOLS_COUNT tools:"
    echo "$TOOL_LIST"
    [ "$TOOLS_COUNT" -gt 10 ] && echo "...and $((TOOLS_COUNT - 10)) more"
    echo ""
fi

echo "Run 'mise install' to install all tools automatically"

{{- else if eq .chezmoi.os "linux" -}}
#!/usr/bin/env bash
# Managed by chezmoi - https://github.com/btuckerc/boilerplate
# Install essential prerequisites (Linux)

set -euo pipefail

echo "Installing essential tools and Ruby build dependencies..."

if command -v apt >/dev/null 2>&1; then
    echo "Detected apt (Debian/Ubuntu)"
    sudo apt update
    sudo apt install -y \
        curl git build-essential autoconf \
        libssl-dev libyaml-dev zlib1g-dev libffi-dev libgmp-dev \
        libreadline-dev libncurses5-dev libgdbm-dev rustc

elif command -v dnf >/dev/null 2>&1; then
    echo "Detected dnf (Fedora/RHEL)"
    
    # Check Fedora version for zlib compatibility
    if grep -q "Fedora release 4[0-9]" /etc/fedora-release 2>/dev/null; then
        ZLIB_PKG="zlib-ng-compat-devel"
    else
        ZLIB_PKG="zlib-devel"
    fi
    
    sudo dnf install -y \
        curl git gcc gcc-c++ make autoconf rust patch bzip2 \
        openssl-devel libffi-devel readline-devel gdbm-devel \
        ncurses-devel libyaml-devel "$ZLIB_PKG"

elif command -v pacman >/dev/null 2>&1; then
    echo "Detected pacman (Arch Linux)"
    sudo pacman -Sy --noconfirm \
        curl git base-devel rust libffi libyaml openssl zlib \
        readline gdbm ncurses

else
    echo "WARNING: Unknown package manager. Please install tools manually."
    echo "Required: git, build-essential, libssl-dev, libyaml-dev, libreadline-dev, libgmp-dev, libffi-dev, zlib1g-dev"
    exit 1
fi

echo "Essential tools and Ruby build dependencies installed successfully"
echo ""

if command -v mise >/dev/null 2>&1; then
    TOOLS_COUNT=$(mise config ls 2>/dev/null | grep -o "config.toml.*" | sed 's/config.toml  //' | tr ',' '\n' | wc -l | tr -d ' ')
    TOOL_LIST=$(mise config ls 2>/dev/null | grep -o "config.toml.*" | sed 's/config.toml  //' | tr ',' '\n' | sed 's/aqua://g; s/ubi://g; s/npm://g; s/pipx://g; s/gem://g; s/asdf:mise-plugins\///g; s/go:.*\///' | head -10 | tr '\n' ' ')
    echo "Running 'mise install' will install $TOOLS_COUNT tools:"
    echo "$TOOL_LIST"
    [ "$TOOLS_COUNT" -gt 10 ] && echo "...and $((TOOLS_COUNT - 10)) more"
    echo ""
fi

echo "INFO: Install mise to complete setup: curl https://mise.run | sh"
echo "INFO: Then run 'mise install' to install all tools automatically"
{{- end -}}
